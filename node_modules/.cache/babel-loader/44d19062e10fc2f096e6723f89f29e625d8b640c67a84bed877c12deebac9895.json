{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fen13\\\\Documents\\\\Dev\\\\ReactProjects\\\\cvreact\\\\src\\\\components\\\\LanguageList.js\";\nimport LanguageItem from './LanguageItem';\nimport jsonData from '../data/data.json';\nimport swiftLogo from \"../assets/swiftLogo.png\";\nimport pythonLogo from \"../assets/pythonLogo.png\";\nimport kotlinLogo from \"../assets/kotlinLogo.png\";\nimport javascriptLogo from \"../assets/javascriptLogo.png\";\nimport sqlLogo from \"../assets/sqlLogo.png\";\nimport htmlLogo from \"../assets/htmlLogo.png\";\nimport cssLogo from \"../assets/cssLogo.png\";\nimport typescriptLogo from \"../assets/typescriptLogo.png\";\nimport \"../styles/LanguageList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LanguagesList() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-list\",\n    children: jsonData.languages.map(Language => /*#__PURE__*/_jsxDEV(LanguageItem, {\n      logo: getLogo(Language.name),\n      name: Language.name,\n      name2: htmlLogo,\n      linkGithub: Language.linkGithub,\n      linkCertif: Language.linkCertif\n    }, Language.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = LanguagesList;\nfunction getLogo(LanguageName) {\n  switch (LanguageName) {\n    case 'Swift':\n      return swiftLogo;\n    case 'Python':\n      return pythonLogo;\n    case 'Kotlin':\n      return kotlinLogo;\n    case 'Javascript':\n      return javascriptLogo;\n    case 'SQL':\n      return sqlLogo;\n    case 'HTML5 et CSS3':\n      return htmlLogo;\n    case 'TypeScript':\n      return typescriptLogo;\n    default:\n      return null;\n  }\n}\nexport default LanguagesList;\nvar _c;\n$RefreshReg$(_c, \"LanguagesList\");","map":{"version":3,"names":["LanguageItem","jsonData","swiftLogo","pythonLogo","kotlinLogo","javascriptLogo","sqlLogo","htmlLogo","cssLogo","typescriptLogo","jsxDEV","_jsxDEV","LanguagesList","className","children","languages","map","Language","logo","getLogo","name","name2","linkGithub","linkCertif","fileName","_jsxFileName","lineNumber","columnNumber","_c","LanguageName","$RefreshReg$"],"sources":["C:/Users/fen13/Documents/Dev/ReactProjects/cvreact/src/components/LanguageList.js"],"sourcesContent":["import LanguageItem from './LanguageItem';\r\nimport jsonData from '../data/data.json'; \r\nimport swiftLogo from \"../assets/swiftLogo.png\";\r\nimport pythonLogo from \"../assets/pythonLogo.png\";\r\nimport kotlinLogo from \"../assets/kotlinLogo.png\";\r\nimport javascriptLogo from \"../assets/javascriptLogo.png\";\r\nimport sqlLogo from \"../assets/sqlLogo.png\";\r\nimport htmlLogo from \"../assets/htmlLogo.png\";\r\nimport cssLogo from \"../assets/cssLogo.png\";\r\nimport typescriptLogo from \"../assets/typescriptLogo.png\";\r\nimport \"../styles/LanguageList.css\"; \r\n\r\nfunction LanguagesList() {\r\n  return (\r\n    <div className=\"language-list\">\r\n      {jsonData.languages.map(Language => (\r\n        <LanguageItem\r\n          key={Language.name}\r\n          logo={getLogo(Language.name)}\r\n          name={Language.name}\r\n          name2={htmlLogo}\r\n          linkGithub={Language.linkGithub}\r\n          linkCertif={Language.linkCertif}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getLogo(LanguageName) {\r\n    switch (LanguageName) {\r\n      case 'Swift':\r\n        return swiftLogo;\r\n      case 'Python':\r\n        return pythonLogo;\r\n      case 'Kotlin':\r\n        return kotlinLogo;\r\n      case 'Javascript':\r\n        return javascriptLogo;\r\n      case 'SQL':\r\n        return sqlLogo;\r\n      case 'HTML5 et CSS3':\r\n        return htmlLogo;\r\n      case 'TypeScript':\r\n        return typescriptLogo;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\nexport default LanguagesList;"],"mappings":";AAAA,OAAOA,YAAY,MAAM,gBAAgB;AACzC,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,aAAaA,CAAA,EAAG;EACvB,oBACED,OAAA;IAAKE,SAAS,EAAC,eAAe;IAAAC,QAAA,EAC3Bb,QAAQ,CAACc,SAAS,CAACC,GAAG,CAACC,QAAQ,iBAC9BN,OAAA,CAACX,YAAY;MAEXkB,IAAI,EAAEC,OAAO,CAACF,QAAQ,CAACG,IAAI,CAAE;MAC7BA,IAAI,EAAEH,QAAQ,CAACG,IAAK;MACpBC,KAAK,EAAEd,QAAS;MAChBe,UAAU,EAAEL,QAAQ,CAACK,UAAW;MAChCC,UAAU,EAAEN,QAAQ,CAACM;IAAW,GAL3BN,QAAQ,CAACG,IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMnB,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACC,EAAA,GAfQhB,aAAa;AAiBtB,SAASO,OAAOA,CAACU,YAAY,EAAE;EAC3B,QAAQA,YAAY;IAClB,KAAK,OAAO;MACV,OAAO3B,SAAS;IAClB,KAAK,QAAQ;MACX,OAAOC,UAAU;IACnB,KAAK,QAAQ;MACX,OAAOC,UAAU;IACnB,KAAK,YAAY;MACf,OAAOC,cAAc;IACvB,KAAK,KAAK;MACR,OAAOC,OAAO;IAChB,KAAK,eAAe;MAClB,OAAOC,QAAQ;IACjB,KAAK,YAAY;MACf,OAAOE,cAAc;IACvB;MACE,OAAO,IAAI;EACf;AACF;AACF,eAAeG,aAAa;AAAC,IAAAgB,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
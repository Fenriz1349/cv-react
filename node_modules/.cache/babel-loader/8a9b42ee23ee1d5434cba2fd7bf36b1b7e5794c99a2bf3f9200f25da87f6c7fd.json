{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fen13\\\\Documents\\\\Dev\\\\ReactProjects\\\\cv-react\\\\src\\\\components\\\\LanguageList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport LanguageItem from './LanguageItem';\nimport axios from 'axios';\nimport jsonData from '../data/data.json';\nimport swiftLogo from \"../assets/swiftLogo.png\";\nimport pythonLogo from \"../assets/pythonLogo.png\";\nimport kotlinLogo from \"../assets/kotlinLogo.png\";\nimport javascriptLogo from \"../assets/javascriptLogo.png\";\nimport sqlLogo from \"../assets/sqlLogo.png\";\nimport htmlLogo from \"../assets/htmlLogo.png\";\nimport cssLogo from \"../assets/cssLogo.png\";\nimport typescriptLogo from \"../assets/typescriptLogo.png\";\nimport \"../styles/LanguageList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LanguagesList() {\n  _s();\n  const [languages, setLanguages] = useState([]);\n  useEffect(() => {\n    const fetchDataForLanguages = async () => {\n      const languageData = jsonData.languages.filter(language => language.name !== 'HTML5 et CSS3');\n      const languagesWithScores = await Promise.all(languageData.map(async language => {\n        let score = null;\n        if (language.name !== 'HTML5 et CSS3') {\n          const response = await axios.get(`https://www.codewars.com/api/v1/users/Fenriz1349/ranks[${language.name.toLowerCase()}]`);\n          score = response.data.ranks.languages[language.name.toLowerCase()].score;\n        }\n        return {\n          ...language,\n          score\n        };\n      }));\n\n      // Sort languages by score in descending order\n      languagesWithScores.sort((a, b) => b.score - a.score);\n      const htmlCssIndex = languagesWithScores.findIndex(language => language.name === 'HTML5 et CSS3');\n      setLanguages(languagesWithScores);\n    };\n    fetchDataForLanguages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-list\",\n    children: languages.map((language, index) => /*#__PURE__*/_jsxDEV(LanguageItem, {\n      logo: getLogo(language.name),\n      name: language.name,\n      logo2: language.name === 'HTML5 et CSS3' ? cssLogo : null,\n      linkGithub: language.linkGithub,\n      score: language.score\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(LanguagesList, \"GUw6XtH2v7o+bYLHQuF10DihlfQ=\");\n_c = LanguagesList;\nfunction getLogo(LanguageName) {\n  switch (LanguageName) {\n    case 'Swift':\n      return swiftLogo;\n    case 'Python':\n      return pythonLogo;\n    case 'Kotlin':\n      return kotlinLogo;\n    case 'Javascript':\n      return javascriptLogo;\n    case 'SQL':\n      return sqlLogo;\n    case 'HTML5 et CSS3':\n      return htmlLogo;\n    case 'TypeScript':\n      return typescriptLogo;\n    default:\n      return null;\n  }\n}\nexport default LanguagesList;\nvar _c;\n$RefreshReg$(_c, \"LanguagesList\");","map":{"version":3,"names":["useState","useEffect","LanguageItem","axios","jsonData","swiftLogo","pythonLogo","kotlinLogo","javascriptLogo","sqlLogo","htmlLogo","cssLogo","typescriptLogo","jsxDEV","_jsxDEV","LanguagesList","_s","languages","setLanguages","fetchDataForLanguages","languageData","filter","language","name","languagesWithScores","Promise","all","map","score","response","get","toLowerCase","data","ranks","sort","a","b","htmlCssIndex","findIndex","className","children","index","logo","getLogo","logo2","linkGithub","fileName","_jsxFileName","lineNumber","columnNumber","_c","LanguageName","$RefreshReg$"],"sources":["C:/Users/fen13/Documents/Dev/ReactProjects/cv-react/src/components/LanguageList.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport LanguageItem from './LanguageItem';\r\nimport axios from 'axios';\r\nimport jsonData from '../data/data.json'; \r\nimport swiftLogo from \"../assets/swiftLogo.png\";\r\nimport pythonLogo from \"../assets/pythonLogo.png\";\r\nimport kotlinLogo from \"../assets/kotlinLogo.png\";\r\nimport javascriptLogo from \"../assets/javascriptLogo.png\";\r\nimport sqlLogo from \"../assets/sqlLogo.png\";\r\nimport htmlLogo from \"../assets/htmlLogo.png\";\r\nimport cssLogo from \"../assets/cssLogo.png\";\r\nimport typescriptLogo from \"../assets/typescriptLogo.png\";\r\nimport \"../styles/LanguageList.css\"; \r\n\r\nfunction LanguagesList() {\r\n  const [languages, setLanguages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchDataForLanguages = async () => {\r\n      const languageData = jsonData.languages.filter(language => language.name !== 'HTML5 et CSS3');\r\n      const languagesWithScores = await Promise.all(\r\n        languageData.map(async (language) => {\r\n          let score = null;\r\n          if (language.name !== 'HTML5 et CSS3') {\r\n            const response = await axios.get(`https://www.codewars.com/api/v1/users/Fenriz1349/ranks[${language.name.toLowerCase()}]`);\r\n            score = response.data.ranks.languages[language.name.toLowerCase()].score;\r\n          }\r\n          return { ...language, score };\r\n        })\r\n      );\r\n\r\n      // Sort languages by score in descending order\r\n      languagesWithScores.sort((a, b) => b.score - a.score);\r\n\r\n      const htmlCssIndex = languagesWithScores.findIndex(language => language.name === 'HTML5 et CSS3');\r\n      \r\n      setLanguages(languagesWithScores);\r\n    };\r\n\r\n    fetchDataForLanguages();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"language-list\">\r\n      {languages.map((language, index) => (\r\n        <LanguageItem\r\n          key={index}\r\n          logo={getLogo(language.name)}\r\n          name={language.name}\r\n          logo2={language.name === 'HTML5 et CSS3' ? cssLogo : null}\r\n          linkGithub={language.linkGithub}\r\n          score={language.score}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getLogo(LanguageName) {\r\n    switch (LanguageName) {\r\n      case 'Swift':\r\n        return swiftLogo;\r\n      case 'Python':\r\n        return pythonLogo;\r\n      case 'Kotlin':\r\n        return kotlinLogo;\r\n      case 'Javascript':\r\n        return javascriptLogo;\r\n      case 'SQL':\r\n        return sqlLogo;\r\n      case 'HTML5 et CSS3':\r\n        return htmlLogo;\r\n      case 'TypeScript':\r\n        return typescriptLogo;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\nexport default LanguagesList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
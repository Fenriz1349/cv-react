{"ast":null,"code":"import{useState,useEffect}from'react';import LanguageItem from'./LanguageItem';import axios from'axios';import jsonData from'../data/data.json';import swiftLogo from\"../assets/swiftLogo.png\";import pythonLogo from\"../assets/pythonLogo.png\";import kotlinLogo from\"../assets/kotlinLogo.png\";import javascriptLogo from\"../assets/javascriptLogo.png\";import sqlLogo from\"../assets/sqlLogo.png\";import htmlLogo from\"../assets/htmlLogo.png\";import cssLogo from\"../assets/cssLogo.png\";import typescriptLogo from\"../assets/typescriptLogo.png\";import\"../styles/LanguageList.css\";import{jsx as _jsx}from\"react/jsx-runtime\";function LanguagesList(){const[languages,setLanguages]=useState([]);useEffect(()=>{const fetchDataForLanguages=async()=>{const filteredLanguageData=jsonData.languages.filter(language=>language.name!=='HTML5 et CSS3');const languagesWithScores=filteredLanguageData.map(language=>({...language,score:null}));await Promise.all(languagesWithScores.map(async language=>{if(language.score===null){const response=await axios.get(\"https://www.codewars.com/api/v1/users/Fenriz1349\");const score=response.data.ranks.languages[language.name.toLowerCase()].score;language.score=score;}}));languagesWithScores.sort((a,b)=>(b.score===null)-(a.score===null)||b.score-a.score);const htmlCssLanguage=jsonData.languages.find(language=>language.name==='HTML5 et CSS3');languagesWithScores.push({...htmlCssLanguage,score:null});setLanguages(languagesWithScores);};fetchDataForLanguages();},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"language-list\",children:languages.map((language,index)=>/*#__PURE__*/_jsx(LanguageItem,{logo:getLogo(language.name),name:language.name,logo2:language.name==='HTML5 et CSS3'?cssLogo:null,linkGithub:language.linkGithub,score:language.score},index))});}function getLogo(LanguageName){switch(LanguageName){case'Swift':return swiftLogo;case'Python':return pythonLogo;case'Kotlin':return kotlinLogo;case'Javascript':return javascriptLogo;case'SQL':return sqlLogo;case'HTML5 et CSS3':return htmlLogo;case'TypeScript':return typescriptLogo;default:return null;}}export default LanguagesList;","map":{"version":3,"names":["useState","useEffect","LanguageItem","axios","jsonData","swiftLogo","pythonLogo","kotlinLogo","javascriptLogo","sqlLogo","htmlLogo","cssLogo","typescriptLogo","jsx","_jsx","LanguagesList","languages","setLanguages","fetchDataForLanguages","filteredLanguageData","filter","language","name","languagesWithScores","map","score","Promise","all","response","get","data","ranks","toLowerCase","sort","a","b","htmlCssLanguage","find","push","className","children","index","logo","getLogo","logo2","linkGithub","LanguageName"],"sources":["C:/Users/fen13/Documents/Dev/ReactProjects/cv-react/src/components/LanguageList.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport LanguageItem from './LanguageItem';\r\nimport axios from 'axios';\r\nimport jsonData from '../data/data.json'; \r\nimport swiftLogo from \"../assets/swiftLogo.png\";\r\nimport pythonLogo from \"../assets/pythonLogo.png\";\r\nimport kotlinLogo from \"../assets/kotlinLogo.png\";\r\nimport javascriptLogo from \"../assets/javascriptLogo.png\";\r\nimport sqlLogo from \"../assets/sqlLogo.png\";\r\nimport htmlLogo from \"../assets/htmlLogo.png\";\r\nimport cssLogo from \"../assets/cssLogo.png\";\r\nimport typescriptLogo from \"../assets/typescriptLogo.png\";\r\nimport \"../styles/LanguageList.css\"; \r\n\r\nfunction LanguagesList() {\r\n  const [languages, setLanguages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchDataForLanguages = async () => {\r\n      const filteredLanguageData = jsonData.languages.filter(language => language.name !== 'HTML5 et CSS3');\r\n  \r\n      const languagesWithScores = filteredLanguageData.map(language => ({\r\n        ...language,\r\n        score: null\r\n      }));\r\n  \r\n      await Promise.all(languagesWithScores.map(async (language) => {\r\n        if (language.score === null) {\r\n          const response = await axios.get(`https://www.codewars.com/api/v1/users/Fenriz1349`);\r\n          const score = response.data.ranks.languages[language.name.toLowerCase()].score;\r\n          language.score = score;\r\n        }\r\n      }));\r\n      languagesWithScores.sort((a, b) => (b.score === null) - (a.score === null) || b.score - a.score);\r\n      \r\n      const htmlCssLanguage = jsonData.languages.find(language => language.name === 'HTML5 et CSS3');\r\n      languagesWithScores.push({ ...htmlCssLanguage, score: null });\r\n  \r\n      setLanguages(languagesWithScores);\r\n    };\r\n  \r\n    fetchDataForLanguages();\r\n  }, []);\r\n  \r\n\r\n  return (\r\n    <div className=\"language-list\">\r\n      {languages.map((language, index) => (\r\n        <LanguageItem\r\n          key={index}\r\n          logo={getLogo(language.name)}\r\n          name={language.name}\r\n          logo2={language.name === 'HTML5 et CSS3' ? cssLogo : null}\r\n          linkGithub={language.linkGithub}\r\n          score={language.score}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getLogo(LanguageName) {\r\n    switch (LanguageName) {\r\n      case 'Swift':\r\n        return swiftLogo;\r\n      case 'Python':\r\n        return pythonLogo;\r\n      case 'Kotlin':\r\n        return kotlinLogo;\r\n      case 'Javascript':\r\n        return javascriptLogo;\r\n      case 'SQL':\r\n        return sqlLogo;\r\n      case 'HTML5 et CSS3':\r\n        return htmlLogo;\r\n      case 'TypeScript':\r\n        return typescriptLogo;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\nexport default LanguagesList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}